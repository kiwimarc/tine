# This file sets the defaults for all ci variables.
# It can and should be used to configure differences between branches.
# It can also be used for feature branches e.g. if not all test are needed or another db should be used.
# overwritten by: ci-config.yml < variables in gitlab-ci.yml < gitlab project variables < per pipeline variables

variables:
  MAJOR_COMMIT_REF_NAME:
    description: "The major commit ref name is mainly used for ci caching. Non feature branches should be there own major. The major of feature branches should be the branch the will be merged into."
    value: "tine20.com/2020.11-custom"

  RUN_CI_PIPELINE:
    description: "main toggle for gitlab ci. if false the ci will do nothing"
    value: "true"

  NO_PUSH:
    description: "do not push any images. Commit images will still be pushed. But they are tagged per pipeline"
    value: "false"

  PUSH_TO_DOCKERHUB:
    description: "push the built result to docker hub. should be only set to true by schedules. force build all images"
    value: "false"

  PUSH_BUILT_IMAGE_TO_GITLAB:
    description: "push the built image to gitlab. force build built and source image"
    value: "false"

  PUSH_DEV_IMAGE_TO_GITLAB:
    description: "push the dev image to gitlab. force build all images"
    value: "false"

  DOCKERHUB_TAG:
    description: "tag used on docker hub"
    value: "dev"

  CUSTOM_APP_VENDOR:
    description: "install one custom app via composer: vendor"
    value: "metaways"

  CUSTOM_APP_VERSION:
    description: "install one custom app via composer: version"
    value: "dev-master"

  # install one custom app via composer: name
  # CUSTOM_APP_NAME default should be nothing

  # install one custom app via composer: git url
  # CUSTOM_APP_GIT_URL default should be nothing

  PHP_STAN_ANALYSES:
    description: "enable php stan"
    value: "true"

  PHP_UNIT_ALL_TESTS_SOURCE:
    description: "enable or disable php unit tests on source (with webpack) image."
    value: "true"

  PHP_UNIT_ALL_TESTS_BUILT:
    description: "enable or disable php unit test on built (with built js, and clean files) image."
    value: "false"

  PHP_UNIT_ALL_TESTS_BUILT_WITH_LDAP:
    description: "enable or disable run all test with ldap backend enabled. Not connected with PHP_UNIT_ALL_TESTS_BUILT."
    value: "false"

  PHP_UNIT_SERVERTESTS:
    description: "enable server tests"
    value: "true"

  PHP_UNIT_SETUP_TESTS:
    description: "enable or disable php unit setup tests"
    value: "false"

  PHP_UNIT_NOGITLABCI_TESTS_BUILT:
    description: "run test with nogitlabci group (test know to not work in gitlab)."
    value: "false"

  PHP_UNIT_ALL_TESTS_SOURCE_PARALLEL:
    description: "whether to run source test in parallel or not"
    value: "true"

  PHP_UNIT_TESTS_POSTFIXMULTIINSTANCE:
    description: "whether to run a source test with the postfixmultiinstance backend"
    value: "false"

  DATABASE_IMAGE:
    description: "database image used by tests"
    value: "${UTIL_REGISTRY}/mariadb:10.4.1"

  REDIS_IMAGE:
    description: ""
    value: "${UTIL_REGISTRY}/redis:5.0.5"

  PHPUNIT_FILTER:
    description: "add a php unit filter to all php unit test jobs e.g. CashBook"
    value: ""

  TEST_WITH_HEALTH_CHECK:
    description: "test if tine20 /health api dose not return a 500"
    value: "false"
  
  RUN_ALL_TESTS:
    description: "Run all tests, test failures are ignored, dose not allow push"
    value: "false"

  CHECK_PHP_VERSION:
    description: "Test if the image was build with the correct php version"
    value: "false"

  PHP_VERSION:
    description: "php version to use"
    value: "7.3"
