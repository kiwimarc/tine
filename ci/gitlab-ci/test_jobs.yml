"check php version":
  stage: test
  image:
    name: "$REGISTRY/test-source$-commit:${IMAGE_TAG}"
  script:
    - echo "PHP version shoud be ${PHP_VERSION}."
    - echo "PHP version is $(php -r 'echo PHP_VERSION;')"
    - "[[ $(php -r 'echo PHP_VERSION;') == $PHP_VERSION.* ]]"
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $CHECK_PHP_VERSION == "never"
      when: never
    - if: $RUN_ALL_TESTS == "true"
      when: on_success
    - if: $CHECK_PHP_VERSION == "true"
      when: on_success
    - when: never
  allow_failure: true
  timeout: 20m # time run: 4m
  interruptible: true

"phpstan: code analyses":
  extends: .abstract_jobs.copy_source
  stage: test
  image:
    name: "$REGISTRY/test-source$-commit:${IMAGE_TAG}"
  script:
    - cd $TINE20ROOT
    - composer require phpstan/phpstan
    - php -d memory_limit=2G $TINE20ROOT/vendor/bin/phpstan analyse --autoload-file=$TINE20ROOT/tine20/vendor/autoload.php --error-format=gitlab --no-progress -vvv | tee ${CI_BUILDS_DIR}/tine20/tine20/code-quality-report.json
  artifacts:
    reports:
      codequality: ${CI_BUILDS_DIR}/tine20/tine20/code-quality-report.json
    paths:
      - ${CI_BUILDS_DIR}/tine20/tine20/code-quality-report.json
    expire_in: 1 days
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $PHP_STAN_ANALYSES == "never"
      when: never
    - if: $RUN_ALL_TESTS == "true"
      when: on_success
    - if: $PHP_STAN_ANALYSES == "true"
      when: on_success
    - when: never
  allow_failure: true
  timeout: 20m # time run: 4m
  interruptible: true

"test with health check":
  extends: .abstract_jobs.php_unit
  variables:
    ARG_IMAGE: test-built-commit
  stage: test
  timeout: 20m
  script:
    - sleep 120s
    - curl -v --fail http://127.0.0.1:80/health
  rules:
    - if: $TEST_WITH_HEALTH_CHECK == "never"
      when: never
    - if: $RUN_ALL_TESTS == "true"
      when: on_success
    - if: $TEST_WITH_HEALTH_CHECK == "true"
      when: on_success
    - when: never

 
