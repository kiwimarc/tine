"check php version":
  stage: test
  variables:
    ARG_IMAGE: test-source
  needs:
    - docker_build_source
  script:
    - echo "PHP version shoud be ${PHP_VERSION}."
    - echo "PHP version is $(php -r 'echo PHP_VERSION;')"
    - "[[ $(php -r 'echo PHP_VERSION;') == $PHP_VERSION.* ]]"
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $CHECK_PHP_VERSION == "never"
      when: never
    - if: $RUN_ALL_TESTS == "true"
      when: on_success
    - if: $CHECK_PHP_VERSION == "true"
      when: on_success
    - when: never
  allow_failure: true
  timeout: 20m # time run: 4m
  interruptible: true

"phpstan":
  extends: .abstract_jobs.copy_source
  stage: test
  variables:
    ARG_IMAGE: test-source
    ARG_COPY_SOURCE: "true"
  needs:
    - docker_build_source
  script:
    - cd $TINE20ROOT
    - composer require phpstan/phpstan
    - if test "${CI_PROJECT_NAME}" == "tine20"; then dir=tine20; else dir=tine20/$CUSTOMAPP_DIR; fi
    - php -d memory_limit=2G $TINE20ROOT/vendor/bin/phpstan analyse --autoload-file=$TINE20ROOT/tine20/vendor/autoload.php --error-format=gitlab --no-progress -vvv $dir | tee ${CI_PROJECT_DIR}/code-quality-report.json
  artifacts:
    reports:
      codequality: ${CI_PROJECT_DIR}/code-quality-report.json
    paths:
      - ${CI_PROJECT_DIR}/code-quality-report.json
    expire_in: 1 days
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $PHP_STAN_ANALYSES == "never"
      when: never
    - if: $RUN_ALL_TESTS == "true"
      when: on_success
    - if: $PHP_STAN_ANALYSES == "true"
      when: on_success
    - when: never
  allow_failure: true
  timeout: 20m # time run: 4m
  interruptible: true
