"check php version":
  stage: test
  variables:
    ARG_IMAGE: test-source
  needs:
    - docker_build_source
  script:
    - echo "PHP version shoud be ${PHP_VERSION}."
    - echo "PHP version is $(php -r 'echo PHP_VERSION;')"
    - "[[ $(php -r 'echo PHP_VERSION;') == $PHP_VERSION.* ]]"
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $CHECK_PHP_VERSION == "never"
      when: never
    - if: $RUN_ALL_TESTS == "true"
      when: on_success
    - if: $CHECK_PHP_VERSION == "true"
      when: on_success
    - when: never
  allow_failure: true
  timeout: 20m # time run: 4m
  interruptible: true

phpstan:
  extends: .abstract_jobs.copy_source
  stage: test
  variables:
    ARG_IMAGE: test-source
    ARG_COPY_SOURCE: "true"
  needs:
    - docker_build_source
  script:
    - cd $TINE20ROOT
    - composer require phpstan/phpstan
    - if test "${CI_PROJECT_NAME}" == "tine20"; then dir=tine20; else dir=tine20/$CUSTOMAPP_DIR; fi
    - php -d memory_limit=2G $TINE20ROOT/vendor/bin/phpstan analyse --autoload-file=$TINE20ROOT/tine20/vendor/autoload.php --error-format=gitlab --no-progress -vvv $dir | tee ${CI_PROJECT_DIR}/code-quality-report.json
  artifacts:
    reports:
      codequality: ${CI_PROJECT_DIR}/code-quality-report.json
    paths:
      - ${CI_PROJECT_DIR}/code-quality-report.json
    expire_in: 1 days
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $PHP_STAN_ANALYSES == "never"
      when: never
    - if: $RUN_ALL_TESTS == "true" && $PHP_STAN_ANALYSES_STRICT == "true"
      allow_failure: false
      when: on_success
    - if: $RUN_ALL_TESTS == "true"
      allow_failure: true
      when: on_success
    - if: $PHP_STAN_ANALYSES == "true" && $PHP_STAN_ANALYSES_STRICT == "true"
      allow_failure: false
      when: on_success
    - if: $PHP_STAN_ANALYSES == "true"
      allow_failure: true
      when: on_success
    - when: never
  timeout: 20m
  interruptible: true

parallel-lint:
  stage: test
  image: composer
  needs: []
  before_script:
    - composer require php-parallel-lint/php-parallel-lint=dev-master
  script:
    - if test "${CI_PROJECT_NAME}" == "tine20"; then dir=./tine20/; else dir=./lib/; fi
    - ./vendor/bin/parallel-lint --gitlab $dir | tee ${CI_PROJECT_DIR}/parallel-lint-report.json
  artifacts:
    reports:
      codequality: ${CI_PROJECT_DIR}/parallel-lint-report.json
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $CODE_ANALYSIS_PARALLEL_LINT == "never"
      when: never
    - if: $RUN_ALL_TESTS == "true" && $CODE_ANALYSIS_PARALLEL_LINT_STRICT == "false"
      allow_failure: true
      when: on_success
    - if: $RUN_ALL_TESTS == "true"
      when: on_success
    - if: $CODE_ANALYSIS_PARALLEL_LINT == "true" && $CODE_ANALYSIS_PARALLEL_LINT_STRICT == "false"
      allow_failure: true
      when: on_success
    - if: $CODE_ANALYSIS_PARALLEL_LINT == "true"
      when: on_success
    - when: never
  timeout: 20m
  interruptible: true

phpcs:
  stage: test
  image: composer
  needs: []
  before_script:
    - composer require squizlabs/php_codesniffer
    - composer require micheh/phpcs-gitlab
  script:
    - if test "${CI_PROJECT_NAME}" == "tine20"; then dir=./tine20; else dir=./lib; fi
    - ./vendor/bin/phpcs -s --report=full --standard=PSR12
      --report-\\Micheh\\PhpCodeSniffer\\Report\\Gitlab=${CI_PROJECT_DIR}/phpcs-report.json $dir
      --exclude=PSR1.Classes.ClassDeclaration,Squiz.Classes.ValidClassName,PSR2.Classes.PropertyDeclaration,PSR2.Methods.MethodDeclaration
      --extensions=php
  artifacts:
    reports:
      codequality: ${CI_PROJECT_DIR}/phpcs-report.json
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $CODE_ANALYSIS_PHPCS == "never"
      when: never
    - if: $RUN_ALL_TESTS == "true" && $CODE_ANALYSIS_PHPCS_STRICT == "true"
      allow_failure: false
      when: on_success
    - if: $RUN_ALL_TESTS == "true"
      allow_failure: true
      when: on_success
    - if: $CODE_ANALYSIS_PHPCS == "true" && $CODE_ANALYSIS_PHPCS_STRICT == "true"
      allow_failure: false
      when: on_success
    - if: $CODE_ANALYSIS_PHPCS == "true"
      allow_failure: true
      when: on_success
    - when: never
  timeout: 20m
  interruptible: true

"test with health check":
  extends: .abstract_jobs.php_unit
  variables:
    ARG_IMAGE: test-built
  stage: test
  timeout: 20m
  script:
    - sleep 120s
    - curl -v --fail http://127.0.0.1:80/health
  rules:
    - if: $TEST_WITH_HEALTH_CHECK == "never"
      when: never
    - if: $RUN_ALL_TESTS == "true"
      when: on_success
    - if: $TEST_WITH_HEALTH_CHECK == "true"
      when: on_success
    - when: never
