# ============ stage: build1-2 ===========================
# This stage builds all docker images
#
# The images are named according to $REGISTRY/$NAME-commit:$CI_PIPELINE_ID-$PHP_VERSION.
#
# Gitlab currently dose not support needs in the same stage.
# Therefore we need multiple build stages.

# docker build source or dependecy image
docker_build_source:
  extends: .abstract_jobs.docker
  stage: build1
  variables:
    GIT_STRATEGY: none
  script:
    - !reference [.lib, script]
    - git_repo_clone
    - docker_build_image base $(docker_image_hash base)
    - export BASE_IMAGE="${REGISTRY}/base:$(docker_image_hash base)";
    - docker_build_image dependency $(docker_image_hash dependency)
    - export DEPENDENCY_IMAGE="${REGISTRY}/dependency:$(docker_image_hash dependency)";
    - |
      echo "${REUSE_IMAGES}"
      if [ "${REUSE_IMAGES}" == true ]; then
        docker_build_image test-dependency $(docker_image_hash test-dependency)
        docker_registry_use_hash_image_as_commit_image test-dependency test-source $(docker_image_hash test-dependency)
      else
        cp $DOCKER_GIT_CONFIG ./ci/dockerimage/.gitconfig
        ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/ci/scripts/reuse_or_build_image.sh source false
        ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/ci/scripts/reuse_or_build_image.sh test-source false
      fi
  timeout: 60m
  interruptible: true
  rules:
    - if: $DOCKER_BUILD_SOURCE == "true"
    # todo find a better solution
    # do not reuse image wenn building build image
    # from php-unit-all-tests-built:
    - if: $PHP_UNIT_ALL_TESTS_BUILT == "true"
      variables:
        REUSE_IMAGES: "false"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PHP_UNIT_ALL_TESTS_BUILT_MERGE_REQUEST == "true"
      variables:
        REUSE_IMAGES: "false"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /php-unit-all-tests-built/
      variables:
        REUSE_IMAGES: "false"
    - if: $CI_PIPELINE_SOURCE == "schedule" && $PHP_UNIT_ALL_TESTS_BUILT_SCHEDULE != "false"
      variables:
        REUSE_IMAGES: "false"
    # from php-unit-nogitlabci-tests-built:
    - if: $PHP_UNIT_NOGITLABCI_TESTS_BUILT == "true"
      variables:
        REUSE_IMAGES: "false"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PHP_UNIT_NOGITLABCI_TESTS_BUILT_MERGE_REQUEST == "true"
      variables:
        REUSE_IMAGES: "false"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /php-unit-nogitlabci-tests-built/
      variables:
        REUSE_IMAGES: "false"
    - if: $CI_PIPELINE_SOURCE == "schedule" && $PHP_UNIT_NOGITLABCI_TESTS_BUILT_SCHEDULE != "false"
      variables:
        REUSE_IMAGES: "false"
    # from php-unit-all-tests-ldap-built:
    - if: $PHP_UNIT_ALL_TESTS_LDAP_BUILD == "true"
      variables:
        REUSE_IMAGES: "false"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PHP_UNIT_ALL_TESTS_LDAP_BUILD_MERGE_REQUEST == "true"
      variables:
        REUSE_IMAGES: "false"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /php-unit-all-tests-ldap-built/
      variables:
        REUSE_IMAGES: "false"
    - if: $CI_PIPELINE_SOURCE == "schedule" && $PHP_UNIT_ALL_TESTS_LDAP_BUILD_SCHEDULE != "false"
      variables:
        REUSE_IMAGES: "false"
    # do not reuse image wenn building build image
    # from deploy-built-image-to-gitlab:
    - if: $DEPLOY_BUILD_IMAGE_TO_GITLAB == "true"
      variables:
        REUSE_IMAGES: "false"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /deploy-built-image-to-gitlab/
      variables:
        REUSE_IMAGES: "false"
    - if: $CI_PIPELINE_SOURCE == "schedule" && $DEPLOY_BUILD_IMAGE_TO_GITLAB_SCHEDULE != "false"
      variables:
        REUSE_IMAGES: "false"
    # from deploy-images-to-dockerhub:
    - if: $DEPLOY_IMAGES_TO_DOCKERHUB == "true"
      variables:
        REUSE_IMAGES: "false"
    # do not reuse image wenn building dev image
    # from deploy-dev-image-to-gitlab:
    - if: $DEPLOY_DEV_IMAGE_TO_GITLAB == "true"
      variables:
        REUSE_IMAGES: "false"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /deploy-dev-image-to-gitlab/
      variables:
        REUSE_IMAGES: "false"
    - if: $CI_PIPELINE_SOURCE == "schedule" && $DEPLOY_DEV_IMAGE_TO_GITLAB_SCHEDULE != "false"
      variables:
        REUSE_IMAGES: "false"
    # from deploy-images-to-dockerhub:
    - if: $DEPLOY_IMAGES_TO_DOCKERHUB == "true"
      variables:
        REUSE_IMAGES: "false"
    # do not reuse image for tag pipelines
    - if: $CI_COMMIT_TAG
      variables:
        REUSE_IMAGES: "false"
    # from docker build packages:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /docker-build-packages/
      variables:
          REUSE_IMAGES: "false"
    # 
    # run for any merge request or schedule
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "schedule"

docker_build_built:
  extends: .abstract_jobs.docker
  stage: build2
  script:
    - !reference [.lib, script]
    - export BASE_IMAGE="${REGISTRY}/base:$(docker_image_hash base)";
    - ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/ci/scripts/build_image.sh build
    - ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/ci/scripts/build_image.sh built
    - ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/ci/scripts/build_image.sh test-built
  rules:
    - if: $DOCKER_BUILD_BUILT == "false"
      when: never
    # todo: use !ref when our gitlab suppored it
    - if: $CI_COMMIT_TAG
    # from php-unit-all-tests-built:
    - if: $PHP_UNIT_ALL_TESTS_BUILT == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PHP_UNIT_ALL_TESTS_BUILT_MERGE_REQUEST == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /php-unit-all-tests-built/
    - if: $CI_PIPELINE_SOURCE == "schedule" && $PHP_UNIT_ALL_TESTS_BUILT_SCHEDULE != "false"
    # from php-unit-nogitlabci-tests-built:
    - if: $PHP_UNIT_NOGITLABCI_TESTS_BUILT == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PHP_UNIT_NOGITLABCI_TESTS_BUILT_MERGE_REQUEST == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /php-unit-nogitlabci-tests-built/
    - if: $CI_PIPELINE_SOURCE == "schedule" && $PHP_UNIT_NOGITLABCI_TESTS_BUILT_SCHEDULE != "false"
    # from php-unit-all-tests-ldap-built:
    - if: $PHP_UNIT_ALL_TESTS_LDAP_BUILD == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $PHP_UNIT_ALL_TESTS_LDAP_BUILD_MERGE_REQUEST == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /php-unit-all-tests-ldap-built/
    - if: $CI_PIPELINE_SOURCE == "schedule" && $PHP_UNIT_ALL_TESTS_LDAP_BUILD_SCHEDULE != "false"
    # from deploy-built-image-to-gitlab:
    - if: $DEPLOY_BUILD_IMAGE_TO_GITLAB == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /deploy-built-image-to-gitlab/
    - if: $CI_PIPELINE_SOURCE == "schedule" && $DEPLOY_BUILD_IMAGE_TO_GITLAB_SCHEDULE != "false"
    # from deploy-images-to-dockerhub:
    - if: $DEPLOY_IMAGES_TO_DOCKERHUB == "true"
    # from docker build packages:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /docker-build-packages/
  timeout: 120m
  interruptible: true

docker_build_dev:
  extends: .abstract_jobs.docker
  stage: build2
  script:
    - !reference [.lib, script]
    - export BASE_IMAGE="${REGISTRY}/base:$(docker_image_hash base)";
    - ${CI_BUILDS_DIR}/${CI_PROJECT_NAMESPACE}/tine20/ci/scripts/build_image.sh dev
  rules:
    - if: $DOCKER_BUILD_DEV == "false"
      when: never
    # from deploy-dev-image-to-gitlab:
    - if: $DEPLOY_DEV_IMAGE_TO_GITLAB == "true"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /deploy-dev-image-to-gitlab/
    - if: $CI_PIPELINE_SOURCE == "schedule" && $DEPLOY_DEV_IMAGE_TO_GITLAB_SCHEDULE != "false"
    # from deploy-images-to-dockerhub:
    - if: $DEPLOY_IMAGES_TO_DOCKERHUB == "true"
  timeout: 60m
  interruptible: true

docker_build_packages:
  extends: .abstract_jobs.docker
  stage: build3
  script:
    - !reference [.lib, script]
    - packaging
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_LABELS =~ /docker-build-packages/
    - when: never
  timeout: 120m
  interruptible: true
