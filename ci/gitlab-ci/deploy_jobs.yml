# ============ stage: deploy ===========================

# pushes built-commit as built to our gitlab registry.
# They can be accessed essayer.
# They are pushed on every change of a major branch.
"docker push built image to gitlab":
  extends: .abstract_jobs.docker
  stage: deploy
  script:
    - ${CI_BUILDS_DIR}/tine20/tine20/ci/scripts/push_image_to_gitlab.sh built
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $PUSH_BUILT_IMAGE_TO_GITLAB == "true"
      when: on_success
    - when: never
  timeout: 20m
  interruptible: false

# pushes dev-commit as dev to our gitlab registry.
# They can be accessed essayer.
# They are pushed on every change of a major branch.
"docker push dev image to gitlab":
  extends: .abstract_jobs.docker
  stage: deploy
  script:
    - ${CI_BUILDS_DIR}/tine20/tine20/ci/scripts/push_image_to_gitlab.sh dev
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $PUSH_DEV_IMAGE_TO_GITLAB == "true"
      when: on_success
    - when: never
  timeout: 20m
  interruptible: false

# pushing built-commit as tine20/tine20 to dockerhub.
# The tag is also overwritten and set to $DOCKERHUB_TAG
# This job should only be triggered by a schedule or a manual pipeline trigger
"docker push built and dev image to dockerhub":
  extends: .abstract_jobs.docker
  stage: deploy
  script:
    - ${CI_BUILDS_DIR}/tine20/tine20/ci/scripts/push_image_to_dockerhub.sh build tine20
    - ${CI_BUILDS_DIR}/tine20/tine20/ci/scripts/push_image_to_dockerhub.sh dev dev
  rules:
    - if: $RUN_NO_TESTS == "true"
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /(^feat)|(^pu)|(change)/
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $PUSH_TO_DOCKERHUB == "true"
      when: on_success
    - when: never
  timeout: 20m
  interruptible: false
