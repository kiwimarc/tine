<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-Tine20-Version" content="{{ constant('TINE20_PACKAGESTRING') }}" />

    {% include 'Tinebase/views/partials/jsInclude.html.twig' %}
</head>
<body>
<div>
    <input type="text" value="data.changed" id="topic"> <br />
    <textarea rows="4" cols="50" id="message">This message was send with love from an external thirdparty Tine 2.0 xwindow client</textarea><br />
    <br />
    <input type="button" value="Send Message" id="sendMessage">
    <input type="button" value="Clear" id="clear">
    <input type="button" value="Disconnect" id="disconnect">
</div>

<div id="messages"></div>


<script>
    var config = postal.fedx.transports.xwindow.configure();
    postal.fedx.transports.xwindow.configure( {
        localStoragePrefix: "{{ path }}/Tine." + config.localStoragePrefix
    } );

    // We need to tell postal how to get a deferred instance
    postal.configuration.promise.createDeferred = function() {
        return new $.Deferred();
    };
    // We need to tell postal how to get a "public-facing"/safe promise instance
    postal.configuration.promise.getPromise = function(dfd) {
        return dfd.promise();
    };

    postal.instanceId('xwindow-' + _.random(0,1000));
    postal.fedx.addFilter([
        { channel: 'thirdparty',   topic: '#', direction: 'both' },
//            { channel : 'postal.request-response', topic : '#', direction : 'both'}
    ]);
    postal.subscribe( {
        channel: "thirdparty",
        topic: "#",
        callback : function ( d, e ) {
            $( "#messages" ).append( "<div><pre>" + JSON.stringify( e, null, 4 ) + "</pre></div>" );
        }
    } );

    $(function() {
        $( "#clear" ).on( "click", function() {
            $( "#messages" ).html( "" );
            postal.publish( {
                channel: "thirdparty",
                topic: "clear"
            } );
        } );
        $("#sendMessage").on('click', function(){
            postal.publish({
                channel: "thirdparty",
                topic: $("#topic").val(),
                data: $("#message").val()
            });
        });
        $( "#disconnect" ).on( "click", function() {
            postal.fedx.disconnect( { } );
        } );

        $("#msg3").on('click', function(){
            postal.fedx.disconnect();
        });
        postal.fedx.signalReady();
    });
</script>
</body>
